/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { FlootClaim } from "../FlootClaim";

export class FlootClaim__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _familiarAddress: string,
    _v1FamiliarAddress: string,
    _flootAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlootClaim> {
    return super.deploy(
      _familiarAddress,
      _v1FamiliarAddress,
      _flootAddress,
      overrides || {}
    ) as Promise<FlootClaim>;
  }
  getDeployTransaction(
    _familiarAddress: string,
    _v1FamiliarAddress: string,
    _flootAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _familiarAddress,
      _v1FamiliarAddress,
      _flootAddress,
      overrides || {}
    );
  }
  attach(address: string): FlootClaim {
    return super.attach(address) as FlootClaim;
  }
  connect(signer: Signer): FlootClaim__factory {
    return super.connect(signer) as FlootClaim__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlootClaim {
    return new Contract(address, _abi, signerOrProvider) as FlootClaim;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_familiarAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_v1FamiliarAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_flootAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FAMILIAR_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOOT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOOT_PER_FAMILIAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "V1_FAMILIAR_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedV1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "disableV1Claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "enableV1Claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "isClaimable",
    outputs: [
      {
        internalType: "bool",
        name: "claimable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "isExcluded",
    outputs: [
      {
        internalType: "bool",
        name: "isExcluded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "multiClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b5060405161104e38038061104e8339818101604052606081101561003457600080fd5b5080516020820151604090920151909190600061004f6100d1565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606093841b8116608081905260a05291831b821660c081905260e05290911b16610100819052610120526100d5565b3390565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c610f1e61013060003980610cc552508061072b5250806103e1525080610866525080610b8d5250806108ea5250610f1e6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a6116100975780638da5cb5b116100665780638da5cb5b14610362578063a5b20c8d1461036a578063dbe7e3bd14610372578063f2fde38b1461038f576100f5565b8063715018a61461031b57806373b8d29e14610323578063744113bc1461032b57806389610a0914610345576100f5565b80634ed73d28116100d35780634ed73d281461016757806350bd48a11461020a578063643736261461027a578063677a39a5146102ea576100f5565b80630a272a0a146100fa5780632ff69aa01461012b578063379607f514610148575b600080fd5b6101176004803603602081101561011057600080fd5b50356103c2565b604080519115158252519081900360200190f35b6101176004803603602081101561014157600080fd5b50356104a9565b6101656004803603602081101561015e57600080fd5b50356104be565b005b6101656004803603602081101561017d57600080fd5b81019060208101813564010000000081111561019857600080fd5b8201836020820111156101aa57600080fd5b803590602001918460208302840111640100000000831117156101cc57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506104ca945050505050565b6101656004803603602081101561022057600080fd5b81019060208101813564010000000081111561023b57600080fd5b82018360208201111561024d57600080fd5b8035906020019184602083028401116401000000008311171561026f57600080fd5b5090925090506104fe565b6101656004803603602081101561029057600080fd5b8101906020810181356401000000008111156102ab57600080fd5b8201836020820111156102bd57600080fd5b803590602001918460208302840111640100000000831117156102df57600080fd5b509092509050610616565b6102f2610729565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61016561074d565b6102f2610864565b610333610888565b60408051918252519081900360200190f35b6101176004803603602081101561035b57600080fd5b5035610897565b6102f26108cc565b6102f26108e8565b6101176004803603602081101561038857600080fd5b503561090c565b610165600480360360208110156103a557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610921565b60008115806103d25750611f4082115b156103df575060006104a4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561045057600080fd5b505afa92505050801561047557506040513d602081101561047057600080fd5b505160015b610481575060016104a4565b5060008281526002602052604090205460ff166104a0575060006104a4565b5060015b919050565b60026020526000908152604090205460ff1681565b6104c781610ac2565b50565b60005b81518110156104fa576104f28282815181106104e557fe5b6020026020010151610ac2565b6001016104cd565b5050565b610506610e6c565b73ffffffffffffffffffffffffffffffffffffffff166105246108cc565b73ffffffffffffffffffffffffffffffffffffffff16146105a657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60005b81811015610611576001600260008585858181106105c357fe5b6020908102929092013583525081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016105a9565b505050565b61061e610e6c565b73ffffffffffffffffffffffffffffffffffffffff1661063c6108cc565b73ffffffffffffffffffffffffffffffffffffffff16146106be57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60005b81811015610611576000600260008585858181106106db57fe5b6020908102929092013583525081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016106c1565b7f000000000000000000000000000000000000000000000000000000000000000081565b610755610e6c565b73ffffffffffffffffffffffffffffffffffffffff166107736108cc565b73ffffffffffffffffffffffffffffffffffffffff16146107f557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6a108b2a2c2802909400000081565b60008181526001602052604081205460ff16806108b857506108b8826103c2565b6108c35760016108c6565b60005b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205460ff1681565b610929610e6c565b73ffffffffffffffffffffffffffffffffffffffff166109476108cc565b73ffffffffffffffffffffffffffffffffffffffff16146109c957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610e716026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008181526001602052604090205460ff1615610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180610eb96030913960400191505060405180910390fd5b610b33816103c2565b15610b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610e976022913960400191505060405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610bfc57600080fd5b505afa158015610c10573d6000803e3d6000fd5b505050506040513d6020811015610c2657600080fd5b50516040805173ffffffffffffffffffffffffffffffffffffffff80841660248301526a108b2a2c2802909400000060448084019190915283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825194955060009485947f000000000000000000000000000000000000000000000000000000000000000093909316939282918083835b60208310610d2d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610cf0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610d8f576040519150601f19603f3d011682016040523d82523d6000602084013e610d94565b606091505b5091509150818015610dc2575080511580610dc25750808060200190516020811015610dbf57600080fd5b50515b610e2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466c6f6f74207472616e73666572206661696c65640000000000000000000000604482015290519081900360640190fd5b505050600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737346616d696c696172206973206e6f7420656c696769626c6520666f7220464c4f4f54464c4f4f542068617320616c7265616479206265656e20636c61696d656420666f7220746869732066616d696c696172a2646970667358221220826ed5fa1932ff141598bd60f082acbe5df635ab90432df2f6403e8300c50f9c64736f6c63430007060033";
