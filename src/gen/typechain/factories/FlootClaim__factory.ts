/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { FlootClaim } from "../FlootClaim";

export class FlootClaim__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _v1FamiliarAddress: string,
    _familiarAddress: string,
    _flootAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlootClaim> {
    return super.deploy(
      _v1FamiliarAddress,
      _familiarAddress,
      _flootAddress,
      overrides || {}
    ) as Promise<FlootClaim>;
  }
  getDeployTransaction(
    _v1FamiliarAddress: string,
    _familiarAddress: string,
    _flootAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _v1FamiliarAddress,
      _familiarAddress,
      _flootAddress,
      overrides || {}
    );
  }
  attach(address: string): FlootClaim {
    return super.attach(address) as FlootClaim;
  }
  connect(signer: Signer): FlootClaim__factory {
    return super.connect(signer) as FlootClaim__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlootClaim {
    return new Contract(address, _abi, signerOrProvider) as FlootClaim;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_v1FamiliarAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_familiarAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_flootAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FAMILIAR_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOOT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOOT_PER_FAMILIAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNLOCK_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedV1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "disableV1Claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "enableV1Claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "isClaimable",
    outputs: [
      {
        internalType: "bool",
        name: "claimable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "multiClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFloot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b5060405161127c38038061127c8339818101604052606081101561003457600080fd5b5080516020820151604090920151909190600061004f6100d5565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606092831b811660a081905260c05292821b831660e052901b16610100819052610120526301e1338042016080526100d9565b3390565b60805160a05160601c60c05160601c60e05160601c6101005160601c6101205160601c61113c61014060003980610a375280610b015280610f35525080610762525080610585525080610dfe525080610bae5250806103f852806109a6525061113c6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a6116100975780638f252054116100665780638f25205414610375578063a5b20c8d1461037d578063dbe7e3bd14610385578063f2fde38b146103a257610100565b8063715018a614610340578063744113bc1461034857806389610a09146103505780638da5cb5b1461036d57610100565b806350bd48a1116100d357806350bd48a1146102125780635c5f6ede14610282578063643736261461029f578063677a39a51461030f57610100565b80632ff69aa014610105578063379607f51461013657806341319831146101555780634ed73d281461016f575b600080fd5b6101226004803603602081101561011b57600080fd5b50356103d5565b604080519115158252519081900360200190f35b6101536004803603602081101561014c57600080fd5b50356103ea565b005b61015d6103f6565b60408051918252519081900360200190f35b6101536004803603602081101561018557600080fd5b8101906020810181356401000000008111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460208302840111640100000000831117156101d457600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061041a945050505050565b6101536004803603602081101561022857600080fd5b81019060208101813564010000000081111561024357600080fd5b82018360208201111561025557600080fd5b8035906020019184602083028401116401000000008311171561027757600080fd5b50909250905061044e565b6101226004803603602081101561029857600080fd5b5035610566565b610153600480360360208110156102b557600080fd5b8101906020810181356401000000008111156102d057600080fd5b8201836020820111156102e257600080fd5b8035906020019184602083028401116401000000008311171561030457600080fd5b50909250905061064d565b610317610760565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610153610784565b61015d61089b565b6101226004803603602081101561036657600080fd5b50356108a9565b6103176108e0565b6101536108fc565b610317610bac565b6101226004803603602081101561039b57600080fd5b5035610bd0565b610153600480360360208110156103b857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610be5565b60026020526000908152604090205460ff1681565b6103f381610d86565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b815181101561044a5761044282828151811061043557fe5b6020026020010151610d86565b60010161041d565b5050565b6104566110dc565b73ffffffffffffffffffffffffffffffffffffffff166104746108e0565b73ffffffffffffffffffffffffffffffffffffffff16146104f657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60005b818110156105615760016002600085858581811061051357fe5b6020908102929092013583525081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016104f9565b505050565b60008115806105765750611f4082115b1561058357506000610648565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156105f457600080fd5b505afa92505050801561061957506040513d602081101561061457600080fd5b505160015b61062557506001610648565b5060008281526002602052604090205460ff1661064457506000610648565b5060015b919050565b6106556110dc565b73ffffffffffffffffffffffffffffffffffffffff166106736108e0565b73ffffffffffffffffffffffffffffffffffffffff16146106f557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60005b818110156105615760006002600085858581811061071257fe5b6020908102929092013583525081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016106f8565b7f000000000000000000000000000000000000000000000000000000000000000081565b61078c6110dc565b73ffffffffffffffffffffffffffffffffffffffff166107aa6108e0565b73ffffffffffffffffffffffffffffffffffffffff161461082c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b69021e19e0c9bab240000081565b60008181526001602052604081205460ff161580156108cc57506108cc82610566565b6108d75760006108da565b60015b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6109046110dc565b73ffffffffffffffffffffffffffffffffffffffff166109226108e0565b73ffffffffffffffffffffffffffffffffffffffff16146109a457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000421015610a3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f43616e6e6f7420776974686472617720464c4f4f542079657400000000000000604482015290519081900360640190fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610abc57600080fd5b505afa158015610ad0573d6000803e3d6000fd5b505050506040513d6020811015610ae657600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb610b2e6108e0565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b8257600080fd5b505af1158015610b96573d6000803e3d6000fd5b505050506040513d602081101561056157600080fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205460ff1681565b610bed6110dc565b73ffffffffffffffffffffffffffffffffffffffff16610c0b6108e0565b73ffffffffffffffffffffffffffffffffffffffff1614610c8d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610cf9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110e16026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610d8f816108a9565b610dfa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f46616d696c6961722063616e6e6f7420636c61696d20464c4f4f540000000000604482015290519081900360640190fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610e6d57600080fd5b505afa158015610e81573d6000803e3d6000fd5b505050506040513d6020811015610e9757600080fd5b50516040805173ffffffffffffffffffffffffffffffffffffffff808416602483015269021e19e0c9bab240000060448084019190915283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825194955060009485947f000000000000000000000000000000000000000000000000000000000000000093909316939282918083835b60208310610f9d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f60565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610fff576040519150601f19603f3d011682016040523d82523d6000602084013e611004565b606091505b5091509150818015611032575080511580611032575080806020019051602081101561102f57600080fd5b50515b61109d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466c6f6f74207472616e73666572206661696c65640000000000000000000000604482015290519081900360640190fd5b505050600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220b86cd263f6514e8f3e323e1b2e6e9bd704cabe19e84e52d1dac0bc17240b620b64736f6c63430007060033";
